{"version":3,"sources":["doc/cemLogo.jpg","logo.svg","component/Header/header.js","component/Banner/banner.js","component/ServiceBlock/ServiceBlock.js","component/HomepageService/homepageservice.js","component/Contact/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","Navbar","bg","expand","Brand","href","width","height","src","Logo","Toggle","aria-controls","Collapse","id","Nav","className","Link","activeKey","Item","Banner","Button","ServiceBlock","props","heading","description","HomepageService","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,qC,4ECA3CD,EAAOC,QAAU,IAA0B,kC,0QCoC5BC,MA/Bf,WACE,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SACjB,yBAAKC,MAAM,MAAMC,OAAO,KAAKC,IAAKC,OAEpC,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,qBAC7B,kBAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUX,KAAK,SAAf,QACA,kBAACS,EAAA,EAAIE,KAAL,CAAUX,KAAK,SAAf,SACA,kBAACS,EAAA,EAAIE,KAAL,CAAUX,KAAK,SAAf,WACA,kBAACS,EAAA,EAAIE,KAAL,CAAUX,KAAK,SAAf,YAEF,kBAACS,EAAA,EAAD,CAAKC,UAAU,sBAAsBE,UAAU,SAC7C,kBAACH,EAAA,EAAII,KAAL,KACE,kBAACJ,EAAA,EAAIE,KAAL,CAAUH,GAAG,eAAeR,KAAK,SAAjC,6BAIF,kBAACS,EAAA,EAAII,KAAL,KACE,kBAACJ,EAAA,EAAIE,KAAL,CAAUH,GAAG,gBAAb,uB,gBCRCM,MAff,WACE,OACE,yBAAKJ,UAAU,cACb,yBAAKA,UAAU,UACb,wDACA,0EAC8C,6BAD9C,sBAIA,kBAACK,EAAA,EAAD,4B,kBCCOC,MAVf,SAAsBC,GACpB,OACE,yBAAKP,UAAU,iBACb,uBAAGA,UAAU,iBACb,wBAAIA,UAAU,mBAAmBO,EAAMC,SACvC,uBAAGR,UAAU,uBAAuBO,EAAME,eC0BjCC,MA/Bf,WACE,OACE,yBAAKV,UAAU,eACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CACEQ,QAAQ,cACRC,YAAY,iCAEd,kBAAC,EAAD,CACED,QAAQ,WACRC,YAAY,qCAEd,kBAAC,EAAD,CACED,QAAQ,UACRC,YAAY,iCAGhB,yBAAKT,UAAU,oBACb,kBAAC,EAAD,CACEQ,QAAQ,cACRC,YAAY,iCAEd,kBAAC,EAAD,CACED,QAAQ,WACRC,YAAY,wC,MCdPE,MAXf,WACE,OACE,oCACE,yBAAKX,UAAU,WACb,uBAAGA,UAAU,WAAb,4BACA,uBAAGA,UAAU,WAAb,oBCYOY,MAXf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6d1aadc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cemLogo.4c63f66c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport \"./header.css\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport Logo from \"../../doc/cemLogo.jpg\";\r\n\r\nfunction header() {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\">\r\n          <img width=\"200\" height=\"50\" src={Logo}></img>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n            <Nav.Link href=\"#link\">About</Nav.Link>\r\n            <Nav.Link href=\"#link\">Service</Nav.Link>\r\n            <Nav.Link href=\"#link\">Contact</Nav.Link>\r\n          </Nav>\r\n          <Nav className=\"justify-content-end\" activeKey=\"/home\">\r\n            <Nav.Item>\r\n              <Nav.Link id=\"contact-link\" href=\"/home\">\r\n                cemconsultancy@gmail.com\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link id=\"contact-link\">+91 123456789</Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default header;\r\n","import React from \"react\";\r\nimport \"./banner.css\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction Banner() {\r\n  return (\r\n    <div className=\"mainBanner\">\r\n      <div className=\"banner\">\r\n        <h1>We Give Good Consultancy</h1>\r\n        <p>\r\n          We provide Consultancy advisory service and <br></br>\r\n          very good service.\r\n        </p>\r\n        <Button>See our Services</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport \"./ServiceBlock.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction ServiceBlock(props) {\r\n  return (\r\n    <div className=\"service-block\">\r\n      <i className=\"fa fa-hammer\"></i>\r\n      <h3 className=\"service-heading\">{props.heading}</h3>\r\n      <p className=\"service-description\">{props.description}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServiceBlock;\r\n","import React from \"react\";\r\nimport \"./homepageservice.css\";\r\nimport ServiceBlock from \"../ServiceBlock/ServiceBlock\";\r\n\r\nfunction HomepageService() {\r\n  return (\r\n    <div className=\"HomeService\">\r\n      <div className=\"HomeServiceBlock\">\r\n        <ServiceBlock\r\n          heading=\"Consulatncy\"\r\n          description=\"We provide good consultation\"\r\n        ></ServiceBlock>\r\n        <ServiceBlock\r\n          heading=\"Advisory\"\r\n          description=\"We provide good advisory as well\"\r\n        ></ServiceBlock>\r\n        <ServiceBlock\r\n          heading=\"Service\"\r\n          description=\"We provide good service too\"\r\n        ></ServiceBlock>\r\n      </div>\r\n      <div className=\"HomeServiceBlock\">\r\n        <ServiceBlock\r\n          heading=\"Consulatncy\"\r\n          description=\"We provide good consultation\"\r\n        ></ServiceBlock>\r\n        <ServiceBlock\r\n          heading=\"Advisory\"\r\n          description=\"We provide good advisory as well\"\r\n        ></ServiceBlock>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomepageService;\r\n","import React from \"react\";\r\nimport \"./contact.css\";\r\n\r\nfunction Contact() {\r\n  return (\r\n    <>\r\n      <div className=\"Contact\">\r\n        <p className=\"contact\">cemconsultancy@gmail.com</p>\r\n        <p className=\"contact\">+91 123456789</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./component/Header/header\";\nimport Banner from \"./component/Banner/banner\";\nimport HomePageService from \"./component/HomepageService/homepageservice\";\nimport Contact from \"./component/Contact/contact\";\n\nfunction App() {\n  return (\n    <>\n      <Header></Header>\n      <Banner></Banner>\n      <HomePageService></HomePageService>\n      <Contact></Contact>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}